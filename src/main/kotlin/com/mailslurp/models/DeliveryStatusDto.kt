/**
* MailSlurp API
* MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
*
* The version of the OpenAPI document: 6.5.2
* Contact: contact@mailslurp.dev
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package com.mailslurp.models


import com.squareup.moshi.Json

/**
 * 
 * @param id 
 * @param userId 
 * @param createdAt 
 * @param updatedAt 
 * @param sentId 
 * @param remoteMtaIp 
 * @param inboxId 
 * @param reportingMta 
 * @param recipients 
 * @param smtpResponse 
 * @param smtpStatusCode 
 * @param processingTimeMillis 
 * @param received 
 * @param subject 
 */

data class DeliveryStatusDto (
    @Json(name = "id")
    val id: java.util.UUID,
    @Json(name = "userId")
    val userId: java.util.UUID,
    @Json(name = "createdAt")
    val createdAt: java.time.OffsetDateTime,
    @Json(name = "updatedAt")
    val updatedAt: java.time.OffsetDateTime,
    @Json(name = "sentId")
    val sentId: java.util.UUID? = null,
    @Json(name = "remoteMtaIp")
    val remoteMtaIp: kotlin.String? = null,
    @Json(name = "inboxId")
    val inboxId: java.util.UUID? = null,
    @Json(name = "reportingMta")
    val reportingMta: kotlin.String? = null,
    @Json(name = "recipients")
    val recipients: kotlin.collections.List<kotlin.String>? = null,
    @Json(name = "smtpResponse")
    val smtpResponse: kotlin.String? = null,
    @Json(name = "smtpStatusCode")
    val smtpStatusCode: kotlin.Int? = null,
    @Json(name = "processingTimeMillis")
    val processingTimeMillis: kotlin.Long? = null,
    @Json(name = "received")
    val received: java.time.OffsetDateTime? = null,
    @Json(name = "subject")
    val subject: kotlin.String? = null
)

