/**
* MailSlurp API
* MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.   ## Resources - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository 
*
* The version of the OpenAPI document: 6.5.2
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package com.mailslurp.models


import com.squareup.moshi.Json
/**
 * 
 * @param attachments 
 * @param bcc 
 * @param cc 
 * @param createdAt 
 * @param id 
 * @param inboxId 
 * @param to 
 * @param userId 
 * @param bodyMD5Hash 
 * @param from 
 * @param subject 
 */

data class SentEmailProjection (
    @Json(name = "attachments")
    val attachments: kotlin.Array<kotlin.String>,
    @Json(name = "bcc")
    val bcc: kotlin.Array<kotlin.String>,
    @Json(name = "cc")
    val cc: kotlin.Array<kotlin.String>,
    @Json(name = "createdAt")
    val createdAt: java.time.OffsetDateTime,
    @Json(name = "id")
    val id: java.util.UUID,
    @Json(name = "inboxId")
    val inboxId: java.util.UUID,
    @Json(name = "to")
    val to: kotlin.Array<kotlin.String>,
    @Json(name = "userId")
    val userId: java.util.UUID,
    @Json(name = "bodyMD5Hash")
    val bodyMD5Hash: kotlin.String? = null,
    @Json(name = "from")
    val from: kotlin.String? = null,
    @Json(name = "subject")
    val subject: kotlin.String? = null
)

