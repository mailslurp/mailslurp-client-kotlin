/**
* MailSlurp API
* MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository
*
* The version of the OpenAPI document: 6.5.2
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package com.mailslurp.models


import com.squareup.moshi.Json

/**
 * A thread is a message thread created for a message received by an alias
 * @param name 
 * @param id 
 * @param updatedAt 
 * @param subject 
 * @param userId 
 * @param inboxId 
 * @param to 
 * @param bcc 
 * @param cc 
 * @param createdAt 
 * @param aliasId 
 */

data class ThreadProjection (
    @Json(name = "name")
    val name: kotlin.String? = null,
    @Json(name = "id")
    val id: java.util.UUID? = null,
    @Json(name = "updatedAt")
    val updatedAt: java.time.OffsetDateTime? = null,
    @Json(name = "subject")
    val subject: kotlin.String? = null,
    @Json(name = "userId")
    val userId: java.util.UUID? = null,
    @Json(name = "inboxId")
    val inboxId: java.util.UUID? = null,
    @Json(name = "to")
    val to: kotlin.collections.List<kotlin.String>? = null,
    @Json(name = "bcc")
    val bcc: kotlin.collections.List<kotlin.String>? = null,
    @Json(name = "cc")
    val cc: kotlin.collections.List<kotlin.String>? = null,
    @Json(name = "createdAt")
    val createdAt: java.time.OffsetDateTime? = null,
    @Json(name = "aliasId")
    val aliasId: java.util.UUID? = null
)

