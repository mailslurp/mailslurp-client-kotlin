/**
* MailSlurp API
* MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
*
* The version of the OpenAPI document: 6.5.2
* Contact: contact@mailslurp.dev
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package com.mailslurp.models


import com.google.gson.annotations.SerializedName

/**
 * Collection of items
 * @param id 
 * @param userId 
 * @param headerId 
 * @param delivered 
 * @param createdAt 
 * @param updatedAt 
 * @param subject 
 * @param inboxId 
 * @param exceptionName 
 * @param message 
 */

data class SendWithQueueResult (
    @SerializedName("id")
    val id: java.util.UUID,
    @SerializedName("userId")
    val userId: java.util.UUID,
    @SerializedName("headerId")
    val headerId: kotlin.String,
    @SerializedName("delivered")
    val delivered: kotlin.Boolean,
    @SerializedName("createdAt")
    val createdAt: java.time.OffsetDateTime,
    @SerializedName("updatedAt")
    val updatedAt: java.time.OffsetDateTime,
    @SerializedName("subject")
    val subject: kotlin.String? = null,
    @SerializedName("inboxId")
    val inboxId: java.util.UUID? = null,
    @SerializedName("exceptionName")
    val exceptionName: kotlin.String? = null,
    @SerializedName("message")
    val message: kotlin.String? = null
)

