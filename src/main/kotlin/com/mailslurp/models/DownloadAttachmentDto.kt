/**
* MailSlurp API
* MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.   ## Resources - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository 
*
* The version of the OpenAPI document: 6.5.2
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package com.mailslurp.models


import com.squareup.moshi.Json

/**
 * Content of attachment
 * @param base64FileContents Base64 encoded string of attachment bytes. Decode the base64 encoded string to get the raw contents. If the file has a content type such as `text/html` you can read the contents directly by converting it to string using `utf-8` encoding.
 * @param contentType Content type of attachment. Examples are `image/png`, `application/msword`, `text/csv` etc.
 * @param sizeBytes Size in bytes of attachment content
 */

data class DownloadAttachmentDto (
    /* Base64 encoded string of attachment bytes. Decode the base64 encoded string to get the raw contents. If the file has a content type such as `text/html` you can read the contents directly by converting it to string using `utf-8` encoding. */
    @Json(name = "base64FileContents")
    val base64FileContents: kotlin.String? = null,
    /* Content type of attachment. Examples are `image/png`, `application/msword`, `text/csv` etc. */
    @Json(name = "contentType")
    val contentType: kotlin.String? = null,
    /* Size in bytes of attachment content */
    @Json(name = "sizeBytes")
    val sizeBytes: kotlin.Long? = null
)

