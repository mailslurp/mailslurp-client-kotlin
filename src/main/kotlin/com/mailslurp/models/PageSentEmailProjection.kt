/**
* MailSlurp API
* MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
*
* The version of the OpenAPI document: 6.5.2
* Contact: contact@mailslurp.dev
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package com.mailslurp.models

import com.mailslurp.models.PageableObject
import com.mailslurp.models.SentEmailProjection
import com.mailslurp.models.Sort

import com.google.gson.annotations.SerializedName

/**
 * Paginated sent email results. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full sent email entity use the projection ID with individual method calls.
 * @param content Collection of items
 * @param size Size of page requested
 * @param number Page number starting at 0
 * @param numberOfElements Number of items returned
 * @param totalElements Total number of items available for querying
 * @param totalPages Total number of pages available
 * @param pageable 
 * @param total 
 * @param last 
 * @param sort 
 * @param first 
 * @param empty 
 */

data class PageSentEmailProjection (
    /* Collection of items */
    @SerializedName("content")
    val content: kotlin.collections.List<SentEmailProjection>,
    /* Size of page requested */
    @SerializedName("size")
    val size: kotlin.Int,
    /* Page number starting at 0 */
    @SerializedName("number")
    val number: kotlin.Int,
    /* Number of items returned */
    @SerializedName("numberOfElements")
    val numberOfElements: kotlin.Int,
    /* Total number of items available for querying */
    @SerializedName("totalElements")
    val totalElements: kotlin.Long,
    /* Total number of pages available */
    @SerializedName("totalPages")
    val totalPages: kotlin.Int,
    @SerializedName("pageable")
    val pageable: PageableObject? = null,
    @SerializedName("total")
    val total: kotlin.Long? = null,
    @SerializedName("last")
    val last: kotlin.Boolean? = null,
    @SerializedName("sort")
    val sort: Sort? = null,
    @SerializedName("first")
    val first: kotlin.Boolean? = null,
    @SerializedName("empty")
    val empty: kotlin.Boolean? = null
)

