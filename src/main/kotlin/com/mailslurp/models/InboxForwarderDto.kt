/**
* MailSlurp API
* MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
*
* The version of the OpenAPI document: 6.5.2
* Contact: contact@mailslurp.dev
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package com.mailslurp.models


import com.google.gson.annotations.SerializedName

/**
 * Inbox forwarder
 * @param id 
 * @param inboxId 
 * @param field 
 * @param match 
 * @param forwardToRecipients 
 * @param createdAt 
 */

data class InboxForwarderDto (
    @SerializedName("id")
    val id: java.util.UUID,
    @SerializedName("inboxId")
    val inboxId: java.util.UUID,
    @SerializedName("field")
    val field: InboxForwarderDto.Field,
    @SerializedName("match")
    val match: kotlin.String,
    @SerializedName("forwardToRecipients")
    val forwardToRecipients: kotlin.collections.List<kotlin.String>,
    @SerializedName("createdAt")
    val createdAt: java.time.OffsetDateTime
) {

    /**
     * 
     * Values: RECIPIENTS,SENDER,SUBJECT,ATTACHMENTS
     */
    enum class Field(val value: kotlin.String) {
        @SerializedName(value = "RECIPIENTS") RECIPIENTS("RECIPIENTS"),
        @SerializedName(value = "SENDER") SENDER("SENDER"),
        @SerializedName(value = "SUBJECT") SUBJECT("SUBJECT"),
        @SerializedName(value = "ATTACHMENTS") ATTACHMENTS("ATTACHMENTS");
    }
}

