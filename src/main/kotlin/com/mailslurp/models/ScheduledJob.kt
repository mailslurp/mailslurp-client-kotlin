/**
* MailSlurp API
* MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
*
* The version of the OpenAPI document: 6.5.2
* Contact: contact@mailslurp.dev
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package com.mailslurp.models


import com.google.gson.annotations.SerializedName

/**
 * 
 * @param id 
 * @param userId 
 * @param inboxId 
 * @param jobId 
 * @param groupId 
 * @param triggerId 
 * @param status 
 * @param sendAtTimestamp 
 * @param createdAt 
 * @param updatedAt 
 */

data class ScheduledJob (
    @SerializedName("id")
    val id: java.util.UUID,
    @SerializedName("userId")
    val userId: java.util.UUID,
    @SerializedName("inboxId")
    val inboxId: java.util.UUID,
    @SerializedName("jobId")
    val jobId: kotlin.String,
    @SerializedName("groupId")
    val groupId: kotlin.String,
    @SerializedName("triggerId")
    val triggerId: kotlin.String,
    @SerializedName("status")
    val status: ScheduledJob.Status,
    @SerializedName("sendAtTimestamp")
    val sendAtTimestamp: java.time.OffsetDateTime,
    @SerializedName("createdAt")
    val createdAt: java.time.OffsetDateTime,
    @SerializedName("updatedAt")
    val updatedAt: java.time.OffsetDateTime
) {

    /**
     * 
     * Values: SUBMITTED,COMPLETED,FAILED
     */
    enum class Status(val value: kotlin.String) {
        @SerializedName(value = "SUBMITTED") SUBMITTED("SUBMITTED"),
        @SerializedName(value = "COMPLETED") COMPLETED("COMPLETED"),
        @SerializedName(value = "FAILED") FAILED("FAILED");
    }
}

