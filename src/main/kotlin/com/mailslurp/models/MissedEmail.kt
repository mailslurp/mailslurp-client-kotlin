/**
* MailSlurp API
* MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
*
* The version of the OpenAPI document: 6.5.2
* Contact: contact@mailslurp.dev
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package com.mailslurp.models


import com.squareup.moshi.Json

/**
 * 
 * @param attachmentCount 
 * @param to 
 * @param cc 
 * @param bcc 
 * @param inboxIds 
 * @param createdAt 
 * @param updatedAt 
 * @param id 
 * @param userId 
 * @param subject 
 * @param bodyExcerpt 
 * @param from 
 */

data class MissedEmail (
    @Json(name = "attachmentCount")
    val attachmentCount: kotlin.Int,
    @Json(name = "to")
    val to: kotlin.collections.List<kotlin.String>,
    @Json(name = "cc")
    val cc: kotlin.collections.List<kotlin.String>,
    @Json(name = "bcc")
    val bcc: kotlin.collections.List<kotlin.String>,
    @Json(name = "inboxIds")
    val inboxIds: kotlin.collections.List<java.util.UUID>,
    @Json(name = "createdAt")
    val createdAt: java.time.OffsetDateTime,
    @Json(name = "updatedAt")
    val updatedAt: java.time.OffsetDateTime,
    @Json(name = "id")
    val id: java.util.UUID? = null,
    @Json(name = "userId")
    val userId: java.util.UUID? = null,
    @Json(name = "subject")
    val subject: kotlin.String? = null,
    @Json(name = "bodyExcerpt")
    val bodyExcerpt: kotlin.String? = null,
    @Json(name = "from")
    val from: kotlin.String? = null
)

