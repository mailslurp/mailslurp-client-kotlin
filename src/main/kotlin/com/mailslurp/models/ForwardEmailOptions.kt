/**
* MailSlurp API
* MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
*
* The version of the OpenAPI document: 6.5.2
* Contact: contact@mailslurp.dev
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package com.mailslurp.models


import com.google.gson.annotations.SerializedName

/**
 * Options for forwarding an email
 * @param to To recipients for forwarded email
 * @param subject Subject for forwarded email
 * @param cc Optional cc recipients
 * @param bcc Optional bcc recipients
 * @param from Optional from override
 * @param useInboxName Optionally use inbox name as display name for sender email address
 */

data class ForwardEmailOptions (
    /* To recipients for forwarded email */
    @SerializedName("to")
    val to: kotlin.collections.List<kotlin.String>,
    /* Subject for forwarded email */
    @SerializedName("subject")
    val subject: kotlin.String? = null,
    /* Optional cc recipients */
    @SerializedName("cc")
    val cc: kotlin.collections.List<kotlin.String>? = null,
    /* Optional bcc recipients */
    @SerializedName("bcc")
    val bcc: kotlin.collections.List<kotlin.String>? = null,
    /* Optional from override */
    @SerializedName("from")
    val from: kotlin.String? = null,
    /* Optionally use inbox name as display name for sender email address */
    @SerializedName("useInboxName")
    val useInboxName: kotlin.Boolean? = null
)

